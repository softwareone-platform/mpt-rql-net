name: $(TeamProject)_$(Build.DefinitionName)_$(Build.BuildId)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
      - main

variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  testResultsDir: 'test_artifacts'
  nugetArtifactsName: packages

pool:
  name: Standard-Linux

stages:
  - stage: build
    displayName: Build, Test and Analyze
    jobs:
      - job: build
        displayName: Build, Test and Analyze
        steps:
          - checkout: self #required for SonarCloud code issues blaming
            fetchDepth: 0
          - template: templates/use_dotnet_steps.yaml
          - template: templates/sonar_cloud_prepare.yaml
            parameters:
              resultsDir: ${{ variables.testResultsDir }}
              coverageReportFile: coverage_*.xml
          - template: templates/build_and_pack.yaml
            parameters:
              nugetArtifactsName: ${{ variables.nugetArtifactsName }}
          - template: templates/run_tests.yaml
            parameters: 
              resultsDir: ${{ variables.testResultsDir }}
              coverageReportFile: coverage_unit.xml
              filter: Unit
          - template: templates/run_tests.yaml
            parameters:
              resultsDir: ${{ variables.testResultsDir }}
              coverageReportFile: coverage_integration.xml
              filter: Integration    
          - task: SonarCloudAnalyze@1
            displayName: Run SonarCloud Analysis
          - task: SonarCloudPublish@1
            displayName: Publish SonarCloud report
            inputs:
              pollingTimeoutSec: '300'

  - stage: deploy
    displayName: "Deploy nuget package"
    condition: and(succeeded(), eq(variables.isMain, true))
    jobs:
      - job:
        displayName: Deploy to nuget
        steps:
          - task: UseDotNet@2
            displayName: Install dotnet v6
            continueOnError: true
            inputs:
              version: 6.x
          - task: DownloadPipelineArtifact@2
            displayName: 'Download Pipeline Artifacts'
            inputs:
              buildType: 'current'
              artifactName: ${{ variables.nugetArtifactsName }}
              targetPath: '$(System.ArtifactsDirectory)'
          - task: NuGetAuthenticate@1
            displayName: 'Authenticate on Nuget feed'
          - task: DotNetCoreCLI@2
            inputs:
              displayName: Push package to NuGet feed
              command: custom
              custom: nuget
              arguments: 'push $(Build.ArtifactStagingDirectory)/*.nupkg -s  https://softwareone-pc.pkgs.visualstudio.com/_packaging/4242bb21-0c81-7ac9-a046-de09f6923e18/nuget/v3/index.json --api-key VSTS --skip-duplicate'
